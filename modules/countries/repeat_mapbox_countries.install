<?php

/**
 * @file
 * Install tasks.
 */

declare(strict_types = 1);

/**
 * Create Countries as terms.
 */
function repeat_mapbox_countries_install(): void {

  /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $storage */
  $storage = Drupal::service('entity_type.manager');
  $storage = $storage->getStorage('taxonomy_term');
  $countries = _repeat_mapbox_countries_default();

  foreach ($countries as $country => $data) {
    $storage->create([
      'field_country_code' => $data['country'],
      'field_marker_position' => "Point ({$data['longitude']} {$data['latitude']})",
      'field_mapbox_country_id' => $data['id'],
      'name' => $country,
      'vid' => 'mapbox_country',
    ])
      ->save();
  }

}

/**
 * Delete country vocabulary terms.
 */
function repeat_mapbox_countries_uninstall(): void {
  /** @var \Drupal\Core\Entity\EntityTypeManagerInterface $storage */
  $storage = Drupal::service('entity_type.manager');
  $storage = $storage->getStorage('taxonomy_term');
  $terms = $storage->loadMultiple($storage->getQuery()
    ->accessCheck(FALSE)
    ->condition('vid', 'mapbox_country')
    ->execute());
  $storage->delete($terms);

  // It removes configurations added by the module.
  // It will help to avoid collisions in case enable it again.
  $configs = [
    'field.field.taxonomy_term.mapbox_country.field_country_code',
    'field.field.taxonomy_term.mapbox_country.field_mapbox_country_id',
    'field.field.taxonomy_term.mapbox_country.field_marker_position',
    'field.storage.taxonomy_term.field_country_code',
    'field.storage.taxonomy_term.field_mapbox_country_id',
    'field.storage.taxonomy_term.field_marker_position',
    'taxonomy.vocabulary.mapbox_country',
  ];

  foreach ($configs as $config) {
    Drupal::configFactory()->getEditable($config)->delete();
  }
}
